{% doc %}
  @prompt
    Remove URL parameters from collection pages including grid_list, filter.v.price.gte, and filter.v.price.lte parameters. Clean up collection URLs to show only the base collection path without query parameters for filtering and view options.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-url-cleaner-{{ ai_gen_id }} {
    padding: {{ block.settings.padding }}px;
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
    text-align: {{ block.settings.text_alignment }};
  }

  .ai-url-cleaner-button-{{ ai_gen_id }} {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: {{ block.settings.button_padding }}px {{ block.settings.button_padding | times: 1.5 }}px;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    border: 2px solid {{ block.settings.button_border_color }};
    border-radius: {{ block.settings.button_border_radius }}px;
    text-decoration: none;
    font-size: {{ block.settings.button_font_size }}px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .ai-url-cleaner-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
    color: {{ block.settings.button_hover_text_color }};border-color: {{ block.settings.button_hover_border_color }};
    transform: translateY(-1px);
  }

  .ai-url-cleaner-button-{{ ai_gen_id }}:focus {
    outline: 2px solid {{ block.settings.button_color }};
    outline-offset: 2px;
  }

  .ai-url-cleaner-icon-{{ ai_gen_id }} {
    width: 16px;
    height: 16px;
    flex-shrink: 0;
  }

  .ai-url-cleaner-hidden-{{ ai_gen_id }} {
    display: none;
  }

  .ai-url-cleaner-message-{{ ai_gen_id }} {
    margin-top: 12px;
    padding: 12px 16px;
    background-color: {{ block.settings.message_background_color }};
    color: {{ block.settings.message_text_color }};
    border-radius: {{ block.settings.border_radius }}px;
    font-size: 14px;
  }

  @media screen and (max-width: 749px) {
    .ai-url-cleaner-{{ ai_gen_id }} {
      padding: {{ block.settings.padding | times: 0.75 }}px;
    }
    .ai-url-cleaner-button-{{ ai_gen_id }} {
      font-size: {{ block.settings.button_font_size | times: 0.9 }}px;
      padding: {{ block.settings.button_padding | times: 0.8 }}px {{ block.settings.button_padding | times: 1.2 }}px;
    }
  }
{% endstyle %}

<url-cleaner-{{ ai_gen_id }}
  class="ai-url-cleaner-{{ ai_gen_id }}"
  data-collection-url="{{ collection.url | default: '' }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.heading != blank %}
    <h3 style="margin: 0 0 16px; color: {{ block.settings.text_color }}; font-size: {{ block.settings.heading_font_size }}px;">
      {{ block.settings.heading }}
    </h3>
  {% endif %}

  {% if block.settings.description != blank %}
    <div style="margin-bottom: 20px; color: {{ block.settings.text_color }}; font-size: {{ block.settings.text_font_size }}px;">
      {{ block.settings.description }}
    </div>
  {% endif %}

  <button
    class="ai-url-cleaner-button-{{ ai_gen_id }} ai-url-cleaner-hidden-{{ ai_gen_id }}"
    id="clear-filters-btn-{{ ai_gen_id }}"
    aria-label="Clear all filters and view options"
  >
    <svg class="ai-url-cleaner-icon-{{ ai_gen_id }}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <path d="M3 6h18"></path>
      <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
      <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line>
      <line x1="14" y1="11" x2="14" y2="17"></line>
    </svg>
    {{ block.settings.button_text }}
  </button>

  <div class="ai-url-cleaner-message-{{ ai_gen_id }} ai-url-cleaner-hidden-{{ ai_gen_id }}" id="success-message-{{ ai_gen_id }}">
    {{ block.settings.success_message }}
  </div>
</url-cleaner-{{ ai_gen_id }}>

<script>
  (function() {
    classUrlCleaner{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.button = null;
        this.successMessage = null;
        this.collectionUrl = '';}

      connectedCallback() {
        this.button = this.querySelector('#clear-filters-btn-{{ ai_gen_id }}');
        this.successMessage = this.querySelector('#success-message-{{ ai_gen_id }}');
        this.collectionUrl = this.getAttribute('data-collection-url');
        
        this.init();
      }

      init() {
        if (this.hasUrlParameters()) {
          this.showButton();
          this.setupEventListeners();
        }
      }

      hasUrlParameters() {
        const url = new URL(window.location.href);
        const params = url.searchParams;
        
        const targetParams = [
          'grid_list',
          'filter.v.price.gte',
          'filter.v.price.lte',
          'sort_by',
          'filter.v.availability',
          'filter.v.option.color',
          'filter.v.option.size',
          'filter.p.vendor',
          'filter.p.product_type',
          'filter.p.tag'
        ];

        return targetParams.some(param => {
          if (param.includes('.')) {
            for (let key of params.keys()) {
              if (key.startsWith(param) || key.includes(param.split('.').pop())) {
                return true;
              }
            }return false;
          }
          return params.has(param);
        });
      }

      showButton() {
        if (this.button) {
          this.button.classList.remove('ai-url-cleaner-hidden-{{ ai_gen_id }}');
        }
      }

      setupEventListeners() {
        if (this.button) {
          this.button.addEventListener('click', () => {
            this.clearUrlParameters();
          });
        }
      }

      clearUrlParameters() {
        let cleanUrl = this.collectionUrl || window.location.pathname;
        
        if (!cleanUrl.startsWith('/')) {
          cleanUrl = '/' + cleanUrl;
        }

        this.showSuccessMessage();
        setTimeout(() => {
          window.location.href = cleanUrl;
        }, 500);
      }

      showSuccessMessage() {
        if (this.successMessage) {
          this.successMessage.classList.remove('ai-url-cleaner-hidden-{{ ai_gen_id }}');
          
          if (this.button) {
            this.button.style.opacity = '0.6';
            this.button.disabled = true;
          }
        }
      }
    }

    customElements.define('url-cleaner-{{ ai_gen_id }}', UrlCleaner{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "URL parameter cleaner",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Clear Filters"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "default": "Remove all filters and view options to see the complete collection."
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Clear All Filters"
    },
    {
      "type": "text",
      "id": "success_message",
      "label": "Success message",
      "default": "Redirecting to clean collection page..."
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "padding",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#f8f9fa"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button background",
      "default": "#dc3545"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Button border",
      "default": "#dc3545"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover background",
      "default": "#c82333"
    },
    {
      "type": "color",
      "id": "button_hover_text_color",
      "label": "Button hover text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_border_color",
      "label": "Button hover border",
      "default": "#c82333"
    },
    {
      "type": "color",
      "id": "message_background_color",
      "label": "Success message background",
      "default": "#d4edda"
    },
    {
      "type": "color",
      "id": "message_text_color",
      "label": "Success message text",
      "default": "#155724"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_font_size",
      "min": 14,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Heading font size",
      "default": 20
    },
    {
      "type": "range",
      "id": "text_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Text font size",
      "default": 14
    },
    {
      "type": "range",
      "id": "button_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Button font size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Button style"
    },
    {
      "type": "range",
      "id": "button_padding",
      "min": 8,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Button padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 6
    }
  ],
  "presets": [
    {
      "name": "URL parameter cleaner"
    }
  ],
  "tag": null
}
{% endschema %}